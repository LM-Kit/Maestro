<MudDialog Class="dialog-root-container">
    <DialogContent>
        <div class="dialog-content-root">
            <div class="model-selection-dialog-container">


                <div class="model-selection-dialog-body">
                    <ModelList OnClick="(model) => MudDialog.Close(model)" LimitWidth="false" Selectable="true" Dense="true" />
                </div>
            </div>

            <hr class="horizontal-divider px-5"/>

            <div class ="d-flex flex-row pa-5">
                <MudButtonGroup>
                    <MudButton Variant="Variant.Filled" Color="Color.Default" OnClick="() => MudDialog.Cancel()">Cancel</MudButton>
                    <MudButton Variant="Variant.Filled" Color="ActionColor" OnClick="() => MudDialog.Close(true)">@ActionText</MudButton>
                </MudButtonGroup>
            </div>
        </div>
    </DialogContent>

</MudDialog>

<style>
    .dialog-content-root {
    width: 100%;
    max-width: 50rem;
    height: auto;
    max-height: 100%;
    display: flex;
    justify-content: center;
    margin-inline: auto;
    }

/*     .model-selection-dialog-container {
    display: flex;
    flex-direction: column;
    border: 1px solid var(--Surface3);
    border-radius: 8px;
    background-color: var(--Surface);
    overflow: hidden;
    flex-grow: 1;
    flex-shrink: 1;
    }

    .model-selection-dialog-header {
    padding-inline: 4px;
    padding-block: 4px;
    display: flex;
    justify-content: space-between;
    text-align: center;
    align-items: center;
    background-color: var(--Surface3);
    }

    .model-selection-dialog-body {
    display: flex;
    flex-direction: column;
    overflow-y: scroll;
    }

    .model-selection-dialog-body::-webkit-scrollbar {
    display: none;
    }

    .close-button {
    color: var(--Outline) !important;
    }

    .close-button:hover {
    color: var(--OnSurface) !important;
    }
 */
</style>

@code {

    [CascadingParameter]
    public string Message { get; set; }

    [CascadingParameter]
    public string Title { get; set; }

    [CascadingParameter]
    public string ActionText { get; set; }

    [CascadingParameter]
    public Color ActionColor { get; set; }

    [CascadingParameter]
    private IMudDialogInstance MudDialog { get; set; }

    // private static MudBlazor.Color GetActionButtonColor(Severity actionSeverity)
    // {
    //     switch (severity)
    //     {
    //         default:
    //         case Severity.Normal:
    //             Color.Default;

    //         case Severity.Error:
    //             return Color.Error;
    //     }
    // }
}