@page "/chat"

@inject LMKitService LMKitService
@inject HttpClient Http
@inject IJSRuntime JS
@inject IScrollHandler ScrollHandler
@inject IResizeHandler ResizeHandler
@inject ILogger<ChatPage> Logger
@inject ISnackbarService SnackbarService
@inject IDialogService DialogService


@inherits MvvmComponentBase<ChatPageViewModel>

<SectionContent SectionName="top-bar">
    <div id="chat-top-bar">
        @if (ShowSidebarToggles)
        {
            <div class="top-bar-side @(!ChatsSidebarIsResizing ? "width-transition" : "")"
                    style="@(ChatsSidebarIsToggled ? $"width: {ChatsSidebarWidth}px" : "")">
                <div class="d-flex justify-space-between flex-grow-1 align-center gap-2">

                    <div class="d-flex flex-shrink-0">
                        <IconButton Style="IconButton.ButtonStyle.SidebarToggle"
                                    Icon="fas fa-message"
                                    OnClick="ToggleChatsSidebar"/>
                    </div>

                    @if (ChatsSidebarIsToggled)
                    {
                        <div class="top-bar-side-title">
                            <MudText Class="text-truncate" Align="Align.Center" Typo="Typo.body2">
                                Chats
                            </MudText>
                        </div>
                    }

                    <div class="d-flex flex-shrink-0">
                        <IconButton Style="IconButton.ButtonStyle.SecondaryAction"
                                    Icon="fas fa-add"
                                    OnClick="ViewModel.ConversationListViewModel.AddNewConversation"/>
                    </div>
                </div>
            </div>
        }

        <div id="top-bar-center">
            <ModelSelectionButton ModelListViewModel="ViewModel.ModelListViewModel"/>
        </div>

        @if (ShowSidebarToggles)
        {
            <div class="top-bar-side @(!SettingsSidebarIsResizing ? "width-transition" : "")"
                 style="@(SettingsSidebarIsToggled ? $"width: {SettingsSidebarWidth}px" : "")">

                <div
                    class="d-flex flex-grow-1 flex-shrink-1 align-center gap-2 overflow-hidden @(SettingsSidebarIsToggled ? "justify-space-between" : "justify-end")">
                    @if (SettingsSidebarIsToggled)
                    {
                        <div class="d-flex flex-shrink-0">
                            <IconButton Style="IconButton.ButtonStyle.SecondaryAction"
                                        Icon="fas fa-arrow-rotate-left"
                                        OnClick="ViewModel.ChatSettingsViewModel.ResetDefaultValues"/>
                        </div>

                        <div class="top-bar-side-title">
                            <MudText Class="text-truncate" Align="Align.Center" Typo="Typo.body2">
                                Settings
                            </MudText>
                        </div>
                    }

                    <div class="d-flex flex-shrink-0">
                        <IconButton Style="IconButton.ButtonStyle.SidebarToggle"
                                    Icon="fas fa-gears"
                                    OnClick="ToggleSettingsSidebar"/>
                    </div>
                </div>
            </div>
        }
    </div>
</SectionContent>

<div id="chat-container">
    <ChatSidebar ShowScrollbar="true"
        Resizable="true"
        Position="ChatSidebar.SidebarPosition.Left"
        @bind-Width="ChatsSidebarWidth"
        @bind-IsResizing="ChatsSidebarIsResizing"
        @bind-IsToggled="ChatsSidebarIsToggled">

        <div class="d-flex flex-column flex-grow-1 pa-1">
            @foreach (var conversation in ViewModel.ConversationListViewModel.Conversations)
            {
                <ConversationListItem OnSelect="OnConversationItemSelected"
                                      OnDelete="OnConversationItemDeleteClicked"
                                      IsSelected="@(conversation == ViewModel.ConversationListViewModel.CurrentConversation)"
                                      ViewModel="conversation"/>
            }
        </div>
    </ChatSidebar>


    <div id="chat-body">
        <div id="conversation-content" class="hover-scrollable">
            @if (ViewModel?.ConversationListViewModel.CurrentConversation != null)
            {
                if (ViewModel.ConversationListViewModel.CurrentConversation.IsEmpty)
                {
                    <div id="empty-chat">
                        <MudStack Class="chat-element align-self-center flex-1" Spacing="8">
                            <MudStack Spacing="2">
                                <MudText Align="Align.Center" Typo="Typo.body2">
                                    <b>Maestro</b> at your service—let’s orchestrate something amazing!
                                </MudText>

                                <MudText Align="Align.Center" Typo="Typo.body2">
                                    Feel free to ask questions, explore ideas, or engage in meaningful conversations.
                                </MudText>

                                <MudText Align="Align.Center" Typo="Typo.body2">
                                    Whether you need assistance, inspiration, or just some lighthearted chat, I'm here
                                    to
                                    help.
                                </MudText>
                            </MudStack>

                            <MudStack Spacing="4">
                                <div class="shortcut-instruction">
                                    <MudText Typo="Typo.overline">
                                        Press <b>Enter</b> to send a new message
                                    </MudText>

                                </div>

                                <div class="shortcut-instruction">
                                    <MudText Typo="Typo.overline">
                                        Hold <b>Shift</b> + <b>Enter</b> to insert a new line
                                    </MudText>
                                </div>
                            </MudStack>
                        </MudStack>
                    </div>
                }
                else
                {
                    <div id="chat-messages" class="chat-element">
                        @foreach (var message in ViewModel.ConversationListViewModel.CurrentConversation.Messages)
                        {
                            <ChatMessage MessageViewModel="message"/>
                        }

                        <div id="chat-messages-bottom-space">
                            <div id="scroll-to-end">
                                @if (!IsScrolledToEnd)
                                {
                                    <button @onclick="OnScrollToEndButtonClicked"
                                            class="scroll-to-end-button">
                                                                                                    <span>
                                                                                                        <i class="fas fa-arrow-down"></i>
                                                                                                    </span>
                                    </button>
                                }
                            </div>
                        </div>
                    </div>
                }
            }
        </div>

        <div id="user-input" class="chat-element">
            <ChatInput ViewModel="ViewModel!.ConversationListViewModel.CurrentConversation"/>
        </div>

        <div id="bottom-space">
            @if (ViewModel?.ConversationListViewModel?.CurrentConversation?.LMKitConversation?.ContextSize > 0)
            {
                <MudText Style="font-size:0.7rem" Align="Align.Center" Typo="Typo.overline">
                    Tokens: @ViewModel.ConversationListViewModel.CurrentConversation.LMKitConversation.ContextUsedSpace /
                    @ViewModel.ConversationListViewModel.CurrentConversation.LMKitConversation.ContextSize
                    (@CalculateUsagePercentage(ViewModel.ConversationListViewModel.CurrentConversation.LMKitConversation.ContextUsedSpace,
                             ViewModel.ConversationListViewModel.CurrentConversation.LMKitConversation.ContextSize)%)
                </MudText>
            }
        </div>
    </div>

    <ChatSidebar ShowScrollbar="false"
                 Resizable="true"
                 Position="ChatSidebar.SidebarPosition.Right"
                 @bind-Width="SettingsSidebarWidth"
                 @bind-IsResizing="SettingsSidebarIsResizing"
                 @bind-IsToggled="SettingsSidebarIsToggled">
        <div class="d-flex flex-column flex-grow-1">
            <ChatSettings ViewModel="ViewModel.ChatSettingsViewModel"/>
        </div>
    </ChatSidebar>
</div>
