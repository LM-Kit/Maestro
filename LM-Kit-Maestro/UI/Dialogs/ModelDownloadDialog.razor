@inject ModelListViewModel ModelListViewModel
@inject ILauncher Launcher
@inject IAppSettingsService AppSettingsService

<MudDialog Class="model-download-root">
    <DialogContent>
        <div class="d-flex flex-column">
            <div class="d-flex flex-row space-between align-center px-1 py-1 bg-surface-2">
                <MudText Align="Align.Center" Class="flex-grow-1" Typo="Typo.caption">
                    Downloads
                </MudText>

                <div class="d-flex justify-end close-button align-center">
                    <IconButton Style="IconButton.ButtonStyle.Icon"
                                Icon="fas fa-close"
                                Size="IconButton.ButtonSize.Small"
                                OnClick="() => MudDialog.Cancel()" />
                </div>
            </div>



            <div class="model-download-body">
                @if (ModelListViewModel.ModelDownloads.Count == 0)
                {
                    <div class="d-flex align-center flex-column gap-4">
                        <MudIcon Icon="fas fa-download"
                        Style="font-size: 2rem !important; color: var(--Outline) !important" />

                        <MudText Class="outline"
                        Typo="Typo.caption"
                        Align="Align.Center">
                            @Locales.NoModelDownloading
                        </MudText>
                    </div>
                }
                else
                {
                    <div class="download-list">
                        @foreach (var model in ModelListViewModel.ModelDownloads)
                        {
                            <DownloadItem ModelInfo="model"
                            StopRequested="() => OnStopRequested(model)"
                            PauseRequested="() => OnPauseRequested(model)"
                            ResumeRequested="() => OnResumeRequested(model)" 
                            DeleteRequested="() => OnDeleteRequested(model)"
                            LoadRequested="() => OnLoadRequested(model)"
                            />
                        }
                    </div>
                }
            </div>

            <div class="model-download-header-footer model-download-footer justify-end">
                <div class="open-directory-wrapper gap-2" @onclick="OpenModelDirectory">
                    <MudIcon Icon="fas fa-folder"
                    Style="font-size: 0.7rem !important; color: var(--Outline) !important" />

                    <MudText Typo="Typo.caption">
                        Open download directory
                    </MudText>
                </div>

            </div>
        </div>
    </DialogContent>
</MudDialog>

<style>

    .header-title {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    width: 100%;
    height: 100%;
    }

    .model-download-root {
    display: flex;
    flex-direction: column;
    width: 32rem;
    border-radius: 1rem;
    border: 1px solid var(--OutlineVariant);
    }

    .model-download-body {
    display: flex;
    flex-direction: column;
    align-content: center;
    align-items: center;
    justify-content: center;
    height: 20rem;
    background-color: var(--Surface);
    }

    .open-directory-wrapper {
    width: 50%;
    height: 100%;
    display: flex;
    justify-content: start;
    align-items: center;
    transition: all ease-out 0.3s;
    background-color: var(--Surface) !important;
    cursor: pointer;
    margin-right: auto;
    color: var(--Outline);
    /* border-left: 1px solid var(--Surface); */
    /* border-top: 1px solid var(--Surface); */
    }

    .open-directory-wrapper:hover {
    color: var(--OnSurface) !important;
    /*             border-color: var(--OutlineVariant);
    */
    }

    .model-download-header {
        background-color: var(--Surface2);
        display: flex;
    }

    .model-download-footer {
        padding-inline: 1rem;
        background-color: var(--Surface) !important;
    }

    .close-button {
    position: absolute;
    right: 0.5rem;
    top: 50%;
    transform: translateY(-50%);
    z-index: 1;
    }

    .model-download-item {
    background-color: var(--Surface15);
    display: flex;
    flex-direction: row;
    }
</style>

@code {
    [Parameter] public MarkupString Message { get; set; } = default(MarkupString);

    [Parameter] public string Title { get; set; } = string.Empty;

    [Parameter] public string ActionText { get; set; } = string.Empty;

    [Parameter] public bool IsImportant { get; set; }

    [CascadingParameter] private IMudDialogInstance DialogInstance { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();

        await InvokeAsync(() => StateHasChanged());
    }

    private void OpenModelDirectory()
    {
        _ = Launcher.OpenAsync(new Uri($"file://{AppSettingsService.ModelStorageDirectory}"));
    }

    private void OnPauseRequested(ModelInfoViewModel modelInfoViewModel)
    {
        ModelListViewModel.PauseModelDownload(modelInfoViewModel);
    }

    private void OnResumeRequested(ModelInfoViewModel modelInfoViewModel)
    {
        ModelListViewModel.ResumeModelDownload(modelInfoViewModel);
    }

    private void OnStopRequested(ModelInfoViewModel modelInfoViewModel)
    {
        ModelListViewModel.CancelModelDownload(modelInfoViewModel);
    }

    private void OnDeleteRequested(ModelInfoViewModel modelInfoViewModel)
    {
        ModelListViewModel.ModelDownloads.Remove(modelInfoViewModel);
    }

    private void OnLoadRequested(ModelInfoViewModel modelInfoViewModel)
    {
        ModelListViewModel.LMKitService.LoadModel(modelInfoViewModel.ModelCard.ModelUri);
    }
}

@code {
    [CascadingParameter] private IMudDialogInstance MudDialog { get; set; }
}