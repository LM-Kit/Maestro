@inject LMKitService LMKitService
@inject IDialogService DialogService

<div id="toto">
        <MudOverlay @bind-Visible="_isShowingModelList" AutoClose="true"/>
    <MudPopover MaxHeight="400"  Open="@_isShowingModelList">
        <ModelList OnClick="OnModelClicked"/>
    </MudPopover>

    <div id="model-selection-button-container"
         class="@(GetButtonContainerClasses(ModelListViewModel))"
         @onclick="() => OnButtonClicked()">
        <div id="button-body">
            <div class="d-flex justify-center">
                @if (ModelListViewModel.LoadingState == ModelListViewModel.ModelLoadingState.Loaded)
                {
                        <MudIconButton Icon="fas fa-eject"
                                       Size="Size.Small"
                                       Class="eject-button"
                                       OnClick="OnEjectButtonClicked"/>
                }
            </div>

            <div id="button-text">
                <div class="text-wrapper">
                    <MudText Align="Align.Center" Typo="Typo.subtitle2">
                        @Text
                    </MudText>
                </div>

            </div>

            @if (ModelListViewModel.LoadingState == ModelListViewModel.ModelLoadingState.NotLoaded ||
                ModelListViewModel.LoadingState == ModelListViewModel.ModelLoadingState.Loaded)
            {
                    <div class="d-flex justify-center">
                        <MudIcon Icon="fas fa-chevron-down" Size="Size.Small" Color="Color.Dark"/>
                    </div>
            }
        </div>

        @if (ModelListViewModel.LoadingState is ModelListViewModel.ModelLoadingState.Loading or
                    ModelListViewModel.ModelLoadingState.Downloading && ModelListViewModel.LoadingProgress != null)
        {
                <div id="progress-bar">
                    <MudProgressLinear Value="@(ModelListViewModel.LoadingProgress.Value * 100)"/>
                </div>
        }
    </div>
</div>