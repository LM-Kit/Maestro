@inject LMKitService LMKitService

<div id="model-selection-button-container"
     class="@(ModelListViewModel.LoadingState == ModelListViewModel.ModelLoadingState.Loaded ? "border-primary" : "border-outline")"
     @onclick="() => OnButtonClicked()">
    <div id="button-body">
        <div class="d-flex justify-center">
            @if (ModelListViewModel.LoadingState == ModelListViewModel.ModelLoadingState.Loaded)
            {
                <MudIconButton Icon="fas fa-eject"
                               Size="Size.Small"
                               Class="eject-button"
                               OnClick="OnEjectButtonClicked"/>
            }
        </div>

        <div id="button-text">
            <div class="text-wrapper">
                <MudText Align="Align.Center" Typo="Typo.subtitle2">
                    @Text
                </MudText>
            </div>

        </div>

        <div  class="d-flex justify-center">
            <MudIcon Icon="fas fa-chevron-down" Size="Size.Small" Color="Color.Dark"/>
        </div>

    </div>

    @if (ModelListViewModel.LoadingState == ModelListViewModel.ModelLoadingState.Loading && ModelListViewModel.LoadingProgress != null)
    {
        <div id="progress-bar">
            <MudProgressLinear Value="ModelListViewModel.LoadingProgress.Value"/>
        </div>
    }
</div>