@page "/models"

@inject ISnackbar Snackbar
@inherits MvvmComponentBase<ModelsPageViewModel>

<SectionContent SectionName="top-bar">

    <div class="d-flex flex-row gap-2 justify-center align-center align-content-center">
        <span>
            Model folder:
        </span>

        <div id="model-folder-container">
            <MudTextField @bind-Value="ViewModel.AppSettingsService.ModelStorageDirectory" />
        </div>

        <IconButton Style="IconButton.ButtonStyle.SecondaryAction"
        Icon="fas fa-edit"
        OnClick="ViewModel.OpenModelsFolder" />

        <IconButton Style="IconButton.ButtonStyle.SecondaryAction"
        Icon="fas fa-folder-open"
        OnClick="ViewModel.OpenModelsFolder" />
    </div>
</SectionContent>

<div id="model-page-container">

    <div>
        <MudText Align="Align.Center">
            @if (ViewModel.FileManager.Models.Count > 0)
            {
                @($"You have {ViewModel.FileManager.Models.Count} {(ViewModel.FileManager.Models.Count > 1 ? "models" : "model")} taking up {ViewModel.FileManager.TotalModelSize}.")
            }
        </MudText>
    </div>

    <div id="model-list-container">
        @foreach (var model in ViewModel.ModelListViewModel.Models)
        {
            <ModelListItem 
            DeleteClicked=""
            ViewModel="model"/>
        }
    </div>

    <div class="bottom-space">
        <div class="">
            Explore more models
        </div>
    </div>
</div>

<style>
    #model-page-container {
    display: flex;
    flex-direction: column;
    height: 100%;
    }

    #model-folder-container {
    max-width: 500px;
    }

    #model-list-container {
    gap: 20px;
    background-color: blue;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    overflow-y: auto;
    flex-grow: 0;
    }



    .bottom-space {
    display: flex;
    min-height: 40px;
    color: var(--Outline) !important;
    justify-content: center;
    align-items: center;
    text-align: center;
    padding: 0;
    }
</style>

@code {
    private void OnDeleteClicked(ModelInfoViewModel modelInfoViewModel)
    {
        ViewModel.DeleteModel(Model);
    }

    private void OnModelOpenInExplorerClicked(ModelInfoViewModel modelInfoViewModel)
    {
        
    }
}