@inject ModelListViewModel ModelListViewModel

<MudStack Spacing="2">
    @foreach (var model in ModelListViewModel.Models)
    {
        <ListItemWrapper>
            <ChildContent>
                <div @onclick="() => OnClick.InvokeAsync(model)">
                    <ModelCard ViewModel="model"/>
                </div>
            </ChildContent>

            <ActionSheet>
                <div class="d-flex flex-column item-actions">
                    @if (model.IsLocallyAvailable)
                    {
                        <MudButton Class="action-button" Variant="Variant.Text"
                                   @onclick="() => ModelListViewModel.OpenModelInExplorer(model)">
                            <MudText Typo="Typo.subtitle2">Reveal in explorer</MudText>
                        </MudButton>
                    }

                    <MudButton Class="action-button" Variant="Variant.Text"
                               @onclick="() => ModelListViewModel.OpenModelHfLink(model)">
                        <MudText Typo="Typo.subtitle2">Open on Hugging Face</MudText>
                    </MudButton>

                    @if (model.IsLocallyAvailable)
                    {
                        <MudButton Class="action-button" Variant="Variant.Text"
                                   @onclick="() => ModelListViewModel.DeleteModel(model)">
                            <MudText Color="Color.Error" Typo="Typo.button">Delete from disk</MudText>
                        </MudButton>
                    }
                </div>
            </ActionSheet>
        </ListItemWrapper>
        }
</MudStack>

@code {
    [Parameter] public EventCallback<ModelInfoViewModel> OnClick { get; set; }

    [Parameter] public bool Dense { get; set; } // todo: implement dense UI for model selection dialog.
}


<style>
    .item-actions {
        padding-inline: 8px;
        padding-block: 4px;
        background-color: var(--Surface2);
        border-radius: 4px;
        border: 1px solid var(--OutlineVariant);
    }

    .action-button:hover {
        background-color: var(--Surface15) !important;
    }
</style>