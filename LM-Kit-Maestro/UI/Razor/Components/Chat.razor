@page "/chat"

@inject LMKitService LMKitService
@inject HttpClient Http
@inject IJSRuntime JS
@inject IScrollHandler ScrollHandler
@inject IResizeHandler ResizeHandler
@inject ILogger<Chat> Logger
@inject ISnackbar Snackbar
@inherits MvvmComponentBase<ChatPageViewModel>

<SectionContent SectionName="top-bar">
    <div id="chat-top-bar">
        <div
            class="top-bar-side @(ViewModel.ChatsSidebarIsToggled ? "top-bar-sidebar-toggled" : "top-bar-sidebar-collapsed")">
            <div class="d-flex justify-space-between flex-grow-1 align-center">
                <IconButton Style="IconButton.ButtonStyle.SidebarToggle"
                            Icon="fas fa-message"
                            OnClick="ViewModel.ToggleChatsSidebar"/>

                @if (ViewModel.ChatsSidebarIsToggled)
                {
                    <div>
                        <MudText Typo="Typo.body2">
                            Chats
                        </MudText>
                    </div>
                }

                <IconButton Style="IconButton.ButtonStyle.SecondaryAction"
                            Icon="fas fa-add"
                            OnClick="ViewModel.ConversationListViewModel.AddNewConversation"/>
            </div>

            <div class="bottom-divider"></div>
        </div>

        <div id="top-bar-center">
            <ModelSelectionButton ModelListViewModel="ViewModel.ModelListViewModel"/>
        </div>

        <div
            class="top-bar-side @(ViewModel.SettingsSidebarIsToggled ? "top-bar-sidebar-toggled" : "top-bar-sidebar-collapsed")">

            <div class="d-flex justify-space-between flex-grow-1 align-center">
                @if (ViewModel.SettingsSidebarIsToggled)
                {
                    <IconButton Style="IconButton.ButtonStyle.SecondaryAction"
                                Icon="fas fa-arrow-rotate-left"
                                OnClick="ViewModel.SettingsViewModel.ResetDefaultValues"/>

                    <MudText Typo="Typo.body2">
                        Settings
                    </MudText>
                }

                <IconButton Style="IconButton.ButtonStyle.SidebarToggle"
                            Icon="fas fa-gears"
                            OnClick="ViewModel.ToggleSettingsSidebar"/>
            </div>

            <div class="bottom-divider"></div>
        </div>
    </div>
</SectionContent>


<div id="chat-container">
    <div class="@(ViewModel.ChatsSidebarIsToggled ? "sidebar-container" : "sidebar-hidden")">
        <div id="chats-sidebar" class="sidebar-content">
            <div id="conversation-list">
                @foreach (var conversation in ViewModel.ConversationListViewModel.Conversations)
                {
                    <ConversationListItem OnSelect="OnConversationItemSelected"
                                          OnDelete="OnConversationItemDeleteClicked"
                                          IsSelected="@(conversation == ViewModel.ConversationListViewModel.CurrentConversation)"
                                          ViewModel="conversation"/>
                }
            </div>
            @* <MudDivider/> *@
        </div>
        <div class="vertical-divider"></div>
    </div>

    <div id="chat-body">
        <div id="conversation-content">
            @if (ViewModel?.ConversationListViewModel.CurrentConversation != null)
            {
                if (ViewModel.ConversationListViewModel.CurrentConversation.IsEmpty)
                {
                            <div id="empty-chat">
                        <MudStack Class="chat-element align-self-center flex-1" Spacing="8">
                            <MudStack Spacing="2">
                                <MudText Align="Align.Center" Typo="Typo.body2">
                                    <b>Maestro</b> at your service—let’s orchestrate something amazing!
                                </MudText>

                                                <MudText Align="Align.Center" Typo="Typo.body2">
                                    Feel free to ask questions, explore ideas, or engage in meaningful conversations.
                                    </MudText>

                                                <MudText Align="Align.Center" Typo="Typo.body2">
                                            Whether you need assistance, inspiration, or just some lighthearted chat, I'm here to
                                    help.
                                </MudText>
                            </MudStack>

                            <MudStack Spacing="4">
                                <div class="shortcut-instruction">
                                            <MudText Typo="Typo.caption">
                                        Press Enter to send a new message

                                    </MudText>

                                </div>

                                <div class="shortcut-instruction">
                                    <MudText Typo="Typo.caption">
                                        Hold Shift + Enter to insert a new line

                                    </MudText>
                                </div>
                            </MudStack>
                        </MudStack>
                    </div>
                }
                else
                {
                    <div id="chat-messages" class="chat-element">
                        @foreach (var message in ViewModel.ConversationListViewModel.CurrentConversation.Messages)
                        {
                            <ChatMessage MessageViewModel="message"/>
                        }

                        <div id="chat-messages-bottom-space">
                            <div id="scroll-to-end">
                                @if (!IsScrolledToEnd)
                                {
                                    <button @onclick="OnScrollToEndButtonClicked"
                                            class="round-button scroll-to-end-button">
                                                                                                                    <span>
                                                                                                                        <i class="fas fa-arrow-down"></i>
                                                                                                                    </span>
                                    </button>
                                }
                            </div>
                        </div>
                    </div>
                }
            }
        </div>

        <div id="user-input" class="chat-element">
            <UserInput ViewModel="ViewModel!.ConversationListViewModel.CurrentConversation"/>
        </div>

        <div id="bottom-space">
            @if (ViewModel?.ConversationListViewModel?.CurrentConversation?.LMKitConversation?.ContextSize > 0)
            {
                <MudText Align="Align.Center" Typo="Typo.caption">
                    Tokens: @ViewModel.ConversationListViewModel.CurrentConversation.LMKitConversation.ContextUsedSpace /
                    @ViewModel.ConversationListViewModel.CurrentConversation.LMKitConversation.ContextSize
                    (@CalculateUsagePercentage(ViewModel.ConversationListViewModel.CurrentConversation.LMKitConversation.ContextUsedSpace,
                             ViewModel.ConversationListViewModel.CurrentConversation.LMKitConversation.ContextSize)%)
                </MudText>
            }
        </div>
    </div>

    <div class="@(ViewModel.SettingsSidebarIsToggled ? "sidebar-container" : "sidebar-hidden")">
        <div class="vertical-divider"></div>
        <div id="settings-sidebar" class="sidebar-content">
            <ChatSettings ViewModel="ViewModel.SettingsViewModel"/>
        </div>
    </div>
</div>
